{"version":3,"sources":["Components/SeasonDisplay.js","Components/Title.js","App.js","index.js"],"names":["SeasonDisplay","render","className","_displayDescription","_getSeason","props","latitude","month","htmlFor","id","placeholder","type","longitude","_convertMonth","season","React","Component","defaultProps","Title","this","title","App","state","errorMessage","Fragment","Date","getMonth","_getUserLocation","window","navigator","geolocation","getCurrentPosition","position","setState","coords","err","message","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7787f88a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SeasonDisplay extends React.Component{\r\n    render = () =>{\r\n        return(\r\n            <div className=\"season-display\">\r\n                <div className=\"season-display-description\">{this._displayDescription(this._getSeason(this.props.latitude, this.props.month))}</div>\r\n                <div className=\"season-display-input\">\r\n                    <div className=\"season-display-input-form\">\r\n                        <label htmlFor=\"input-latitude\">Latitude</label>\r\n                        <br/>\r\n                        <input id=\"input-latitude\" placeholder=\"0\" type=\"number\"></input>\r\n                    </div>\r\n                    <div className=\"season-display-input-form\">\r\n                        <label htmlFor=\"input-longitude\">Longitude</label>\r\n                        <br/>\r\n                        <input id=\"input-longitude\"  placeholder=\"0\"  type=\"number\"></input>\r\n                    </div>\r\n                    <div className=\"season-display-input-form\">\r\n                        <label htmlFor=\"input-month\">Month</label>\r\n                        <br/>\r\n                        <select id=\"input-month\">\r\n                            <option>January</option>\r\n                            <option>February</option>\r\n                            <option>March</option>\r\n                            <option>April</option>\r\n                            <option>May</option>\r\n                            <option>June</option>\r\n                            <option>July</option>\r\n                            <option>August</option>\r\n                            <option>September</option>\r\n                            <option>October</option>\r\n                            <option>November</option>\r\n                            <option>December</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"season-display-input-form\">\r\n                        <button className=\"season-display-input-button\">Calculate</button>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className=\"season-display-information\">\r\n                    <div className=\"flex\">\r\n                       <p>Latitude  </p>\r\n                       <p className=\"bigger\">{this.props.latitude}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                       <p>Longitude  </p>\r\n                       <p className=\"bigger\">{this.props.longitude}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                       <p>Month  </p>\r\n                       <p className=\"bigger\">{this._convertMonth(this.props.month)}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                       <p>Season  </p>\r\n                       <p className=\"bigger\">{this._getSeason(this.props.latitude, this.props.month)}</p>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    _convertMonth(month){\r\n        switch(month) {\r\n            case 0:\r\n              return 'January';\r\n            case 1:\r\n              return 'Feburary';\r\n            case 2:\r\n              return 'March';\r\n            case 3:\r\n              return 'April';\r\n            case 4:\r\n              return 'May';\r\n            case 5:\r\n              return 'June';\r\n            case 6:\r\n              return 'July';\r\n            case 7:\r\n              return 'August';\r\n            case 8:\r\n              return 'September';\r\n            case 9:\r\n              return 'October';\r\n            case 10:\r\n              return 'November'\r\n            default:\r\n              return 'December';\r\n          }\r\n    }\r\n\r\n    _getSeason = (latitude, month) =>{ \r\n        if(month > 2 && month < 9){\r\n            return latitude > 0 ? 'Summer' : 'Winter';\r\n        }else{\r\n            return latitude > 0 ? 'Winter' : 'Summber';\r\n        }\r\n    }\r\n\r\n    _displayDescription = (season) =>{\r\n        if(season === 'Summer'){\r\n            return 'Huft Its Hot!';\r\n        }else{\r\n            return 'Brr Its Cold!';\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nSeasonDisplay.defaultProps = {\r\n    latitude: '0',\r\n    longitude: '0',\r\n    month:'January',\r\n}\r\n\r\nexport default SeasonDisplay;","import React from \"react\";\r\n\r\nclass Title extends React.Component{\r\n    render(){\r\n        return(\r\n            <h1 className=\"application-title\">\r\n                {this.props.title}\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;\r\n\r\n","import React from \"react\";\r\nimport SeasonDisplay from \"./Components/SeasonDisplay\";\r\nimport Title from \"./Components/Title\";\r\nimport './Styles/main.css';\r\nclass App extends React.Component{\r\n    state= {latitude: null, longitude: null, errorMessage:'', }\r\n    componentDidMount(){\r\n        this._getUserLocation();\r\n    }\r\n    render = () =>{\r\n        if(this.state.errorMessage === '' && this.state.latitude != null){\r\n            return (\r\n                <React.Fragment>\r\n                    <Title title=\"SEAS CALC\"/>\r\n                    <SeasonDisplay latitude={this.state.latitude} longitude={this.state.longitude} month={new Date().getMonth()}/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        if(this.state.errorMessage && this.state.latitude == null){\r\n            return (\r\n                <React.Fragment>\r\n                    <Title title={this.state.errorMessage}/>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return (\r\n                <React.Fragment>\r\n                    <Title title='Load'/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n     \r\n    }\r\n    _getUserLocation(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                this.setState({ latitude: position.coords.latitude })\r\n                this.setState({longitude:position.coords.longitude})\r\n            },\r\n            (err) => {\r\n                this.setState({ errorMessage: err.message })\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}