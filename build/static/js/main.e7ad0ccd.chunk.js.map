{"version":3,"sources":["Utils/Helper.js","Components/SeasonDisplay.js","Components/Title.js","App.js","index.js"],"names":["limitNumber","number","limit","toString","length","numberLimited","i","convertNumberToMonth","month","parseInt","SUMMER_BACKGROUND_COLOR","SUMMER_WHITE_COLOR","SUMMER_BASE_COLOR","SUMMER_BASE_COLOR_DARKER","WINTER_BACKGROUND_COLOR","WINTER_WHITE_COLOR","WINTER_BASE_COLOR","WINTER_BASE_COLOR_DARKER","animateToSummer","document","querySelector","style","backgroundColor","color","querySelectorAll","forEach","input","border","sdif","button","addEventListener","animateToWinter","SeasonDisplay","onButtonClick","inputLatiude","getElementById","value","inputLongitude","inputMonth","_getSeason","props","onCalculateClick","render","className","_displayDescription","latitude","htmlFor","id","placeholder","type","onClick","longitude","season","React","Component","defaultProps","Title","this","title","App","state","errorMessage","setState","Fragment","_getUserLocation","Date","getMonth","window","navigator","geolocation","getCurrentPosition","position","coords","err","message","ReactDOM"],"mappings":"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","file":"static/js/main.e7ad0ccd.chunk.js","sourcesContent":["const limitNumber =  (number, limit) =>{\r\n    if(number !== null){\r\n        number = number.toString();\r\n        if(number.length > limit){\r\n          let numberLimited = '';\r\n          for(let i = 0; i<limit; i++){\r\n            numberLimited += number[i];\r\n          }\r\n          return numberLimited;\r\n        }else{\r\n          return number;\r\n        }\r\n    }else{\r\n        return '0';\r\n    }\r\n}\r\n\r\nconst convertNumberToMonth = (month) =>{\r\n    month = parseInt(month);\r\n    if(month != null){\r\n        switch(month) {\r\n            case 0:\r\n              return 'January';\r\n            case 1:\r\n              return 'Feburary';\r\n            case 2:\r\n              return 'March';\r\n            case 3:\r\n              return 'April';\r\n            case 4:\r\n              return 'May';\r\n            case 5:\r\n              return 'June';\r\n            case 6:\r\n              return 'July';\r\n            case 7:\r\n              return 'August';\r\n            case 8:\r\n              return 'September';\r\n            case 9:\r\n              return 'October';\r\n            case 10:\r\n              return 'November'\r\n            default:\r\n              return 'December';\r\n          }\r\n    }else{\r\n        return 'January';\r\n    }\r\n}\r\n\r\nconst SUMMER_BACKGROUND_COLOR = \"#e3e3e3\";\r\nconst SUMMER_WHITE_COLOR = \"#fafafa\";\r\nconst SUMMER_BASE_COLOR = \"#ee6f57\";\r\nconst SUMMER_BASE_COLOR_DARKER = \"#cb3737\";\r\n\r\nconst WINTER_BACKGROUND_COLOR = \"#d3e0ea\";\r\nconst WINTER_WHITE_COLOR = \"#f6f5f5\";\r\nconst WINTER_BASE_COLOR = \"#1687a7\";\r\nconst WINTER_BASE_COLOR_DARKER = \"#276678\";\r\n\r\n\r\nconst animateToSummer = () =>{\r\n  document.querySelector('body').style.backgroundColor = SUMMER_BACKGROUND_COLOR;\r\n  document.querySelector('.application-title').style.color = SUMMER_BASE_COLOR;\r\n  document.querySelector('.season-display').style.backgroundColor = SUMMER_WHITE_COLOR;\r\n  document.querySelector('.season-display-description').style.color = SUMMER_BASE_COLOR_DARKER;\r\n  const inputs = document.querySelectorAll('input');\r\n  inputs.forEach(input => {\r\n    input.style.backgroundColor = SUMMER_BACKGROUND_COLOR;\r\n    input.style.border = `2px solid ${SUMMER_BACKGROUND_COLOR}`;\r\n    input.style.color = SUMMER_BASE_COLOR_DARKER;\r\n  });\r\n  const seasonDisplayInputForms = document.querySelectorAll('.season-display-input-form');\r\n  seasonDisplayInputForms.forEach(sdif =>{\r\n    sdif.style.color = SUMMER_BASE_COLOR_DARKER;\r\n  })\r\n  document.querySelector('#input-month').style.backgroundColor = SUMMER_BACKGROUND_COLOR;\r\n  document.querySelector('#input-month').style.border = `2px solid ${SUMMER_BACKGROUND_COLOR}`;\r\n  document.querySelector('#input-month').style.color =SUMMER_BASE_COLOR_DARKER;\r\n  const button =  document.querySelector('button')\r\n  button.style.backgroundColor = SUMMER_BASE_COLOR;\r\n  button.style.border = `2px solid ${SUMMER_BASE_COLOR}`;\r\n  button.addEventListener(\"mouseover\", () =>{\r\n    button.style.backgroundColor = SUMMER_BASE_COLOR_DARKER;\r\n  });\r\n  button.addEventListener(\"mouseout\", () =>{\r\n    button.style.backgroundColor = SUMMER_BASE_COLOR;\r\n  })\r\n  document.querySelector('.season-display-information').style.backgroundColor =SUMMER_BASE_COLOR;\r\n  document.querySelector('.season-display-information').style.color = SUMMER_WHITE_COLOR;\r\n}\r\n\r\nconst animateToWinter = () =>{\r\n  document.querySelector('body').style.backgroundColor = WINTER_BACKGROUND_COLOR;\r\n  document.querySelector('.application-title').style.color = WINTER_BASE_COLOR;\r\n  document.querySelector('.season-display').style.backgroundColor = WINTER_WHITE_COLOR;\r\n  document.querySelector('.season-display-description').style.color = WINTER_BASE_COLOR_DARKER;\r\n  const inputs = document.querySelectorAll('input');\r\n  inputs.forEach(input => {\r\n    input.style.backgroundColor = WINTER_BACKGROUND_COLOR;\r\n    input.style.border = `2px solid ${WINTER_BACKGROUND_COLOR}`;\r\n    input.style.color = WINTER_BASE_COLOR_DARKER;\r\n  });\r\n  const seasonDisplayInputForms = document.querySelectorAll('.season-display-input-form');\r\n  seasonDisplayInputForms.forEach(sdif =>{\r\n    sdif.style.color = WINTER_BASE_COLOR_DARKER;\r\n  })\r\n  document.querySelector('#input-month').style.backgroundColor = WINTER_BACKGROUND_COLOR;\r\n  document.querySelector('#input-month').style.border = `2px solid ${WINTER_BACKGROUND_COLOR}`;\r\n  document.querySelector('#input-month').style.color =WINTER_BASE_COLOR_DARKER;\r\n  const button =  document.querySelector('button')\r\n  button.style.backgroundColor = WINTER_BASE_COLOR;\r\n  button.style.border = `2px solid ${WINTER_BASE_COLOR}`;\r\n  button.addEventListener(\"mouseover\", () =>{\r\n    button.style.backgroundColor = WINTER_BASE_COLOR_DARKER;\r\n  });\r\n  button.addEventListener(\"mouseout\", () =>{\r\n    button.style.backgroundColor = WINTER_BASE_COLOR;\r\n  })\r\n  document.querySelector('.season-display-information').style.backgroundColor =WINTER_BASE_COLOR;\r\n  document.querySelector('.season-display-information').style.color = WINTER_WHITE_COLOR;\r\n}\r\n\r\nexport {limitNumber, convertNumberToMonth, animateToSummer, animateToWinter}","import React from \"react\";\r\nimport {limitNumber, convertNumberToMonth, animateToSummer, animateToWinter} from '../Utils/Helper';\r\n\r\nclass SeasonDisplay extends React.Component{\r\n    onButtonClick = () =>{\r\n      const inputLatiude = document.getElementById('input-latitude').value;\r\n      const inputLongitude = document.getElementById('input-longitude').value;\r\n      const inputMonth = document.getElementById('input-month').value;\r\n      const season = this._getSeason(inputLatiude, inputMonth);\r\n      if(season === \"Summer\"){\r\n        animateToSummer();\r\n      }else{\r\n        animateToWinter();\r\n      }\r\n      this.props.onCalculateClick(inputLatiude, inputLongitude, inputMonth);\r\n    }  \r\n\r\n    render = () =>{\r\n        return(\r\n            <div className=\"season-display\">\r\n                <div className=\"season-display-description\">{this._displayDescription(this._getSeason(this.props.latitude, this.props.month))}</div>\r\n                <div className=\"season-display-input\">\r\n                    <div className=\"season-display-input-form\">\r\n                        <label htmlFor=\"input-latitude\">Latitude</label>\r\n                        <br/>\r\n                        <input id=\"input-latitude\" placeholder=\"0\" type=\"number\"></input>\r\n                    </div>\r\n                    <div className=\"season-display-input-form\">\r\n                        <label htmlFor=\"input-longitude\">Longitude</label>\r\n                        <br/>\r\n                        <input id=\"input-longitude\"  placeholder=\"0\"  type=\"number\"></input>\r\n                    </div>\r\n                    <div className=\"season-display-input-form\">\r\n                        <label htmlFor=\"input-month\">Month</label>\r\n                        <br/>\r\n                        <select id=\"input-month\">\r\n                            <option value=\"0\">January</option>\r\n                            <option value=\"1\" >February</option>\r\n                            <option value=\"2\">March</option>\r\n                            <option value=\"3\">April</option>\r\n                            <option value=\"4\">May</option>\r\n                            <option value=\"5\">June</option>\r\n                            <option value=\"6\">July</option>\r\n                            <option value=\"7\">August</option>\r\n                            <option value=\"8\">September</option>\r\n                            <option value=\"9\">October</option>\r\n                            <option value=\"10\">November</option>\r\n                            <option value=\"11\">December</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"season-display-input-form\">\r\n                        <button className=\"season-display-input-button\" onClick={()=>{this.onButtonClick()}}>Calculate</button>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className=\"season-display-information\">\r\n                    <div className=\"flex\">\r\n                       <p>Latitude  </p>\r\n                       <p className=\"bigger\">{limitNumber(this.props.latitude, 5)}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                       <p>Longitude  </p>\r\n                       <p className=\"bigger\">{limitNumber(this.props.longitude, 5)}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                       <p>Month  </p>\r\n                       <p className=\"bigger\">{convertNumberToMonth(this.props.month)}</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                       <p>Season  </p>\r\n                       <p className=\"bigger\" id=\"testing\">{this._getSeason(this.props.latitude, this.props.month)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n    _getSeason = (latitude, month) =>{ \r\n        if(month > 2 && month < 9){\r\n            return latitude > 0 ? 'Summer' : 'Winter';\r\n        }else{\r\n            return latitude > 0 ? 'Winter' : 'Summer';\r\n        }\r\n    }\r\n\r\n    _displayDescription = (season) =>{\r\n        if(season === 'Summer'){\r\n            return 'Huft Its Hot!';\r\n        }else{\r\n            return 'Brr Its Cold!';\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nSeasonDisplay.defaultProps = {\r\n    latitude: '0',\r\n    longitude: '0',\r\n    month:'January',\r\n}\r\n\r\nexport default SeasonDisplay;","import React from \"react\";\r\n\r\nclass Title extends React.Component{\r\n    render(){\r\n        return(\r\n            <h1 className=\"application-title\">\r\n                {this.props.title}\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;\r\n\r\n","import React from \"react\";\r\nimport SeasonDisplay from \"./Components/SeasonDisplay\";\r\nimport Title from \"./Components/Title\";\r\nimport './Styles/main.css';\r\nclass App extends React.Component{\r\n    state= {latitude: null, longitude: null, errorMessage:'', month:''}\r\n    componentDidMount(){\r\n        this._getUserLocation();\r\n        this.setState({month:new Date().getMonth()});\r\n    }\r\n    onCalculateClick = (latitude, longitude, month) =>{\r\n        this.setState({ latitude: latitude,\r\n                        longitude: longitude,\r\n                        month: month})\r\n    }\r\n    render = () =>{\r\n        if(this.state.errorMessage === '' && this.state.latitude != null){\r\n            return (\r\n                <React.Fragment>\r\n                    <Title title=\"SEAS CALC\"/>\r\n                    <SeasonDisplay \r\n                    latitude={this.state.latitude} \r\n                    longitude={this.state.longitude} \r\n                    month={this.state.month}\r\n                    onCalculateClick={this.onCalculateClick}/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        if(this.state.errorMessage && this.state.latitude == null){\r\n            return (\r\n                <React.Fragment>\r\n                    <Title title={this.state.errorMessage}/>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return (\r\n                <React.Fragment>\r\n                    <Title title='Load'/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n     \r\n    }\r\n    _getUserLocation(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                this.setState({ latitude: position.coords.latitude })\r\n                this.setState({longitude:position.coords.longitude})\r\n            },\r\n            (err) => {\r\n                this.setState({ errorMessage: err.message })\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}